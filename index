import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Table } from "@/components/ui/table";

export default function ElectricityBill() {
  const [floors, setFloors] = useState([
    { name: "Ground Floor", meter: "#346003", prev: "", curr: "" },
    { name: "First Floor", meter: "#346004", prev: "", curr: "" },
    { name: "Second Floor", meter: "#345998", prev: "", curr: "" },
  ]);
  const [demandCharge, setDemandCharge] = useState(1237.5);
  const [electricityDuty, setElectricityDuty] = useState(411.49);
  const ratePerUnit = 6;

  const fixedCharge = (demandCharge + electricityDuty) / 3;

  const handleChange = (index, field, value) => {
    const updatedFloors = [...floors];
    updatedFloors[index][field] = value;
    setFloors(updatedFloors);
  };

  const calculateBill = (floor) => {
    const consumption = floor.curr && floor.prev ? parseFloat(floor.curr) - parseFloat(floor.prev) : 0;
    const cost = consumption * ratePerUnit;
    return {
      consumption,
      cost,
      total: cost + fixedCharge,
    };
  };

  const totalSum = floors.reduce((acc, floor) => acc + calculateBill(floor).total, 0);

  return (
    <div className="p-6 max-w-xl mx-auto w-full">
      <h1 className="text-xl font-bold mb-4 text-center">B-189, Sector 122 - Electricity Bill Bifurcation</h1>
      <div className="mb-4">
        <label className="block mb-1">Demand Charge (RS):</label>
        <Input value={demandCharge} onChange={(e) => setDemandCharge(parseFloat(e.target.value) || 0)} className="w-full" />
      </div>
      <div className="mb-4">
        <label className="block mb-1">Electricity Duty (RS):</label>
        <Input value={electricityDuty} onChange={(e) => setElectricityDuty(parseFloat(e.target.value) || 0)} className="w-full" />
      </div>
      <div className="overflow-x-auto">
        <Table className="min-w-full">
          <thead>
            <tr>
              <th>Floor</th>
              <th>Meter</th>
              <th>Previous Reading</th>
              <th>Current Reading</th>
              <th>Units</th>
              <th>Cost (RS)</th>
              <th>Fixed Charge (RS)</th>
              <th>Total (RS)</th>
            </tr>
          </thead>
          <tbody>
            {floors.map((floor, index) => {
              const { consumption, cost, total } = calculateBill(floor);
              return (
                <tr key={index}>
                  <td>{floor.name}</td>
                  <td>{floor.meter}</td>
                  <td>
                    <Input value={floor.prev} onChange={(e) => handleChange(index, "prev", e.target.value)} className="w-full" />
                  </td>
                  <td>
                    <Input value={floor.curr} onChange={(e) => handleChange(index, "curr", e.target.value)} className="w-full" />
                  </td>
                  <td>{consumption}</td>
                  <td>{cost.toFixed(2)}</td>
                  <td>{fixedCharge.toFixed(2)}</td>
                  <td>{total.toFixed(2)}</td>
                </tr>
              );
            })}
            <tr className="font-bold">
              <td colSpan="7" className="text-right">Total (RS):</td>
              <td>{totalSum.toFixed(2)}</td>
            </tr>
          </tbody>
        </Table>
      </div>
    </div>
  );
}
